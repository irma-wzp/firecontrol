<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-3.2.xsd 
		http://www.springframework.org/schema/mvc 
		http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd 
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-3.2.xsd 
		http://www.springframework.org/schema/aop 
		http://www.springframework.org/schema/aop/spring-aop-3.2.xsd 
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx-3.2.xsd ">
		
	<!-- 加载配置文件 -->
	<context:property-placeholder location="classpath:jdbc.properties"/>
	
	<!-- 加载数据源  使用dbcp -->
	<bean id="dataSource_boundary" class="com.mchange.v2.c3p0.ComboPooledDataSource" >
		<property name="driverClass" value="${jdbc.boundary.driverclass}" />
		<property name="jdbcUrl" value="${jdbc.boundary.url}" />
		<property name="user" value="${jdbc.boundary.username}" />
		<property name="password" value="${jdbc.boundary.password}" />
		<property name="maxPoolSize" value="${jdbc.boundary.maxPoolSize}" />
		<property name="minPoolSize" value="${jdbc.boundary.minPoolSize}" />
		<property name="initialPoolSize" value="${jdbc.boundary.initialPoolSize}" />
		<property name="acquireIncrement" value="${jdbc.boundary.acquireIncrement}" />
	</bean>
	
		<!-- sqlSessinFactory -->
	<bean id="sessionFactory_boundary" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 加载mybatis的配置文件 -->
		<property name="configLocation" value="classpath:mybatis/sqlMapConfig.xml"/>
		<!-- 数据源 -->
		<property name="dataSource" ref="dataSource_boundary"/>
	</bean>	
	
	<!-- mapper批量扫描，从mapper包中扫描出mapper接口，自动创建代理对象并且在spring容器中注册 
	遵循规范：将mapper.java和mapper.xml映射文件名称保持一致，且在一个目录 中
	自动扫描出来的mapper的bean的id为mapper类名（首字母小写）
	-->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.henghao.mapper.zdxfjd"/>
		<property name="sqlSessionFactoryBeanName" value="sessionFactory_boundary"/>
	</bean>
	
		<!-- 事务管理器 -->
	<bean id="transactionManager_boundary" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<!-- 数据源dataSource在applicationContext-dao.xml中配置了 -->
		<property name="dataSource" ref="dataSource_boundary"></property>
	</bean>
	
	<!-- 通知 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager_boundary">
		<tx:attributes>
			<!-- 传播行为 -->
			<tx:method name="save*" propagation="REQUIRED"/>
			<tx:method name="add*" propagation="REQUIRED"/>
			<tx:method name="log*" propagation="REQUIRED"/>
			<tx:method name="delete*" propagation="REQUIRED"/>
			<tx:method name="insert*" propagation="REQUIRED"/>
			<tx:method name="update*" propagation="REQUIRED"/>
			<tx:method name="get*" propagation="SUPPORTS" read-only="true"/>
			<tx:method name="find*" propagation="SUPPORTS" read-only="true"/>
			<tx:method name="select*" propagation="SUPPORTS" read-only="true"/>
		</tx:attributes>
	</tx:advice>
	
	<!-- aop -->
	<aop:config>
		<aop:advisor advice-ref="txAdvice" pointcut="execution(* com.henghao.service.impl.*.*(..))"/>
	</aop:config>
	
</beans>